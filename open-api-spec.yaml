openapi: 3.0.0
info:
  title: User Management API
  version: 1.0.0
paths:
  /auth:
    post:
      summary: Authenticate a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Auth"
      responses:
        "200":
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
  /users:
    get:
      summary: List all users
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /users/{userId}:
    get:
      summary: Get a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A single user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    put:
      summary: Update a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /roles:
    get:
      summary: List all roles
      responses:
        "200":
          description: A list of roles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Role"
    post:
      summary: Create a new role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
      responses:
        "201":
          description: Role created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
components:
  schemas:
    Auth:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    Token:
      type: object
      properties:
        token:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        email:
          type: string
        password:
          type: string
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"
    Role:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
